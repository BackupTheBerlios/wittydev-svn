<?xml version="1.0"?>

<project name="WittyBuild_TEMPLATE_JSF_WAPP" default="packageIt" basedir="../">
    <description>
        Generic J2EE Web Application (WAR) build 
    </description>

	
  <!-- set global properties for this build -->
  	<tstamp>
		<format property="TODAY_CK" pattern="yyyyMMdd" locale="it,IT"/>
	</tstamp>

  	<property name="project.home" value="${basedir}"/>
  	<property name="project.name" value="TEMPLATE_JSF"/>
	<property name="build.path" value="${project.home}/build"/>
	<property name="dist.path" value="${project.home}/dist"/>
	<property name="webLibs.path" value="${project.home}/lib"/>
	<property name="genericlibs" value="${project.home}/../MISC_LIBS"/>
	<property name="jboss.home" value="C:/carlos/dev/servers/jboss-4.2.2.GA"/>
	
	<property name="bapp.path" value="${project.home}/../TEMPLATE_BAPP"/>
	
	
	<!-- .................. START Build classpath ............... -->
	<fileset dir="${jboss.home}" id="miscLibs">
    	<include name="server/default/lib/commons-io-1.3.1.jar"/>
    	<include name="server/default/lib/commons-logging.jar"/>
    	<include name="server/default/lib/commons-fileupload-1.2.jar"/>
    	<include name="server/default/lib/commons-io-1.3.1.jar"/>
    	<include name="server/default/lib/commons-logging.jar"/>
    	<include name="server/default/lib/servlet-api.jar"/>
		<include name="server/default/lib/jboss-annotations-ejb3.jar"/>
		<include name="server/default/lib/jboss-ejb3x.jar"/>
		<include name="server/default/lib/hibernate-annotations.jar"/>

    </fileset>
    <fileset dir="${jboss.home}/server/default/deploy/ejb3.deployer" id="ejb3Libs">
        <include name="*.jar"/>
    </fileset>
    <fileset dir="${jboss.home}/server/default/lib" id="ejb3PersistenceLibs">
        <include name="*ejb3-persistence.jar"/>
    </fileset>
	<fileset dir="${webLibs.path}/" id="jsfLibs">
		<include name="el-api.jar"/>
		<include name="jsf-*.jar"/>
	</fileset>

	<path id="classpath">
		<fileset refid="jsfLibs"/>
		<fileset refid="miscLibs"/>
		<fileset refid="ejb3Libs"/>
		<fileset refid="ejb3PersistenceLibs"/>
		<pathelement location="${build.path}/classes"/>
		<pathelement location="${bapp.path}/dist/TEMPLATE_BAPP_client.jar"/>
		<pathelement location="${genericlibs}/jboss_4.0.5.GA/client/jbossall-client.jar"/>
	</path>
	<!-- .................. END Build classpath ............... -->	

	<!--path id="tool.cp">
        <fileset dir="${genericlibs}/JAXRPC">
            <include name="*.jar"/>
        </fileset>
	</path>	

	<taskdef name="wscompile" classname="com.sun.xml.rpc.tools.ant.Wscompile">
	    <classpath refid="tool.cp"/>
	</taskdef>
	
	<wscompile
	    gen="true"
	    base="${build.path}"
	    features="explicitcontext"
	    debug="true"
	    config="${project.home}/builders/server_info_ws_config.xml">
		<classpath refid="tool.cp"/>
	</wscompile-->
	
    <!-- Define a taskdef for the wstools ant task -->
	
	<path id="tool.cp">
		<fileset dir="${genericlibs}/jboss_4.0.5.GA/client">
            <include name="*.jar"/>
        </fileset>
		<pathelement location="${bapp.path}/dist/TEMPLATE_BAPP_client.jar"/>
		<pathelement location="${build.path}/classes"/>
		<pathelement location="${genericlibs}/jboss_4.2.0.GA/lib/endorsed/xercesImpl.jar"/>
	</path>	
    <taskdef name="wstools" classname="org.jboss.ws.tools.ant.wstools">
      <classpath refid="tool.cp"/>
    </taskdef>

	
    <!-- samples/rpcstyle -->
	<target name="ws_generate_xmls" depends="compileIt">
		<wstools dest="${build.path}/web/WEB-INF"
		 	verbose="true"
		     config="${project.home}/builders/server_info_ws_config.xml"
		 >
		</wstools>
	</target>
	

	<path id="tool2.cp">
		<fileset dir="${genericlibs}/JAXRPC">
            <include name="*.jar"/>
        </fileset>
		<fileset dir="${genericlibs}/jboss_4.0.5.GA/client">
            <include name="*.jar"/>
        </fileset>
		
		<pathelement location="${bapp.path}/dist/TEMPLATE_BAPP_client.jar"/>
		<pathelement location="${build.path}/classes"/>
	</path>	
	
	<taskdef name="wscompile" classname="com.sun.xml.rpc.tools.ant.Wscompile">
      <classpath refid="tool2.cp"/>
    </taskdef>

	<!-- samples/rpcstyle -->
	<target name="ws_compile" >
		<!--wscompile dest="${build.path}/web/WEB-INF"
		 	verbose="true"
		     config="${project.home}/builders/server_info_ws_config.xml"
		 >
		</wscompile-->
		
			<wscompile
			    client="true"
			    base="${build.path}/jaxrpc/client/classes"
			    features="explicitcontext"
			    debug="true"
				verbose="true"
				keep="true"
			    config="${project.home}/builders/client_info_ws_config.xml">
				<classpath refid="tool2.cp"/>
			</wscompile>
		
	  		<jar destfile="${dist.path}/${project.name}_client.jar" >
				<fileset dir="${build.path}/jaxrpc/client/classes/">
	  		  		<include name="**/*"/>
	  		  	</fileset>
				<fileset dir="${build.path}/classes/">
	  		  		<include name="org/wittydev/j2ee/examples/templateA/wapp/**/*"/>
	  		  	</fileset>
	  		</jar>
		
	</target>
	
	
	
	
	
	
	
	<target name="checkHomeDir" unless="project.home.exists">
  		<echo message="Warning: Project home does not exists => ${project.home}"/>
  	</target>

	<target name="clean" description="clean up" >
		<echo message="${build.path}/classes}"/>
	    <!--delete dir="${build.path}"/-->
		<delete dir="${build.path}">
			<!--exclude name="**/*.class"/-->
		</delete>
		<echo message="${dist.path}/"/>
		<delete dir="${dist.path}" includes="*.*"/>
	</target>

	<target name="init" depends="clean">
	  	<available file="${project.home}" type="dir" property="project.home.exists"	/>
		<antcall target="checkHomeDir"/>
  		<mkdir dir="${build.path}/classes"/>
		<mkdir dir="${build.path}/jaxrpc/client/classes"/>
		<mkdir dir="${build.path}/jaxrpc/client/src"/>
		<mkdir dir="${build.path}/web/WEB-INF"/>
  		<mkdir dir="${dist.path}"/>
	</target>
	
	<!--target name="checkProjRevision" unless="project.revision">
		<echo message="Setting project.revision to 1"/>
		<property name="project.revision" value="1"/>
	</target-->

	
  	<target name="compileIt" depends="init"  description="compile the source " if="project.home.exists">
  		<!--echo message="Copying resources ${project.home}/src"/>		
  		<copy todir="${build.path}/classes">
	      <fileset dir="${project.home}/src" excludes="**/*.java"/>
	    </copy-->

  		
  		<echo message="Copying resources ${project.home}/src"/>		
  		<copy todir="${build.path}/classes">
	      <fileset dir="${project.home}/src" excludes="**/*.java"/>
	    </copy>

  	    <echo message="compiling ${project.home}/src"/>		
	  	
		<javac srcdir="${project.home}/src"
	        destdir="${build.path}/classes"
			classpathref="classpath"
		    debug="on"
	        source="1.4"
			target="1.4"
	        fork="false"
			includes="**/*"
			verbose="no"
		  >
			<!--compilerarg value="-version"/-->
		</javac>

  	</target>
  	
  	<target name="packageIt" depends="compileIt,ws_generate_xmls"  description="War it">
  		<war destfile="${dist.path}/${project.name}_WAPP.war" 
  			webxml="${project.home}/web/WEB-INF/web.xml"
  			manifest="${project.home}/src/META-INF/MANIFEST.MF"
  			>
  			
			<fileset dir="${project.home}/web/">
				<exclude name="WEB-INF/web.xml"/>
				<exclude name="WEB-INF/classes/**/*"/>
			</fileset>
  			<fileset dir="${project.home}/build/web/"/>
  			
  		  <classes dir="${build.path}/classes" includes="**" />
  		  <!--lib dir="${project.home}/lib" includes="jsf*.jar" /-->
  		</war>

  		
  		
  	</target>

  	  <target name="oneStepFtp" depends="packageIt" description="ftp the war">
  	  	<echo message="Local file: ${dist.path}/${project.name}.jar"/>
  	  	<echo message="Remote file: ${remote.deploy.path}/${project.name}.jar"/>
  	    <ftp server="${remote.ftp.host}"
  	         port="${remote.ftp.port}"
  	         remotedir="${remote.deploy.path}/${remote.deploy.wappFolder}"
  	         userid="${remote.ftp.user}"
  	         password="${remote.ftp.password}"
  	         passive="yes"
  	         depends="yes"
  	         binary="yes" 
  	    	 verbose="false"
  	    	>
  	      <fileset file="${dist.path}/${project.name}.jar"/>
  	    </ftp>
  	  </target>

	  <target name="oneStepCopy" depends="packageIt" description="copy to deploy dir">
 	    <echo message="Copying resources WAR file"/>		
	  	<echo message="From file: ${dist.path}/${project.name}_WAPP.war"/>
	  	<echo message="To file: ${local.deploy.path}/${local.deploy.wappFolder}/${project.name}_WAPP.war"/>
  		<copy todir="${local.deploy.path}/${local.deploy.wappFolder}">
  			<fileset file="${dist.path}/${project.name}_WAPP.war"/>
	    </copy>

	  </target>


</project>


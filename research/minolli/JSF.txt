COPIED IN MINOLLI


JavaServer Faces technology is a server-side user interface component framework for Java
technology-based web applications.


The main components of JavaServer Faces technology are as follows:
- An API for representing UI components and managing their state; handling events,
server-side validation, and data conversion; defining page navigation; supporting
internationalization and accessibility; and providing extensibility for all these features
- Two JavaServer Pages (JSP) custom tag libraries for expressing UI components within a JSP
page and for wiring components to server-side objects


Installing JSF
	1- Add the JSF libraries:
			- jsf-api.jar		: Sun JSF API
			- jsf-impl.jar		: Sun JSF Implementation
			- el-api.jar		: Sun Expression Language API 
	
	2- Modify the application web.xml to map the FacesServlet servlet [1]
		<servlet>
			<display-name>FacesServlet</display-name>
			<servlet-name>FacesServlet</servlet-name>
			<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		<servlet-mapping>
			<servlet-name>FacesServlet</servlet-name>
			<url-pattern>/SomeFolderName/*.jsf</url-pattern>
		</servlet-mapping>


Tags
	verbatim
		This tag renders output component (UIOutput) within the closest component. 
		It takes the content from the body of this tag. This tag can be used to nest 
		plain html within the JSF component tree. Any Html and jsp tags in the view 
		tag can be nested within verbatim tag. The reason behind it is that all 
		the content inside the f:view tag should be in the JSF component tree. 
		When JSF component tree is rendered, it contains only JSF components. But 
		html and JSP tags are not JSF components. So we nest the non JSF  tags to 
		the verbatim tag that treats them as JSF components. 


Message Resources
	

JSF ViewHandler
	A JSF ViewHandler is a plug-in that handles the Render Response and Restore View 
	phases of the JSF request-processing life cycle for different response-generation 
	technologies, including Facelets. [6]
	

MyFaces 
	is an open source implementation of JSF that provides many additional validators, 
	including some that are not included in JSF. See Resources to learn about MyFaces. [5]

JSF vs Struts
	http://websphere.sys-con.com/read/46516.htm
	

[1] http://java.sun.com/javaee/5/docs/tutorial/doc/JavaEETutorial.pdf
[2] http://java.sun.com/javaee/5/docs/tutorial/doc/index.html
[3] http://java.sun.com/developer/technicalArticles/GUI/JavaServerFaces/
[4] http://www.onjava.com/pub/a/onjava/excerpt/JSF_chap8/index.html?page=2
	Events handling
[5] http://www.ibm.com/developerworks/library/j-jsf3/
	Conversion and validation overview
[6 ] http://www.ibm.com/developerworks/java/library/j-facelets/
	Facelets fits JSF as glove
